{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","theme","createTheme","typography","allVariants","fontFamily","textTransform","fontSize","React","createElement","Box","AppBar","position","style","background","Toolbar","IconButton","size","edge","color","aria-label","src","width","height","Typography","variant","component","sx","flexGrow","Stack","direction","spacing","Button","ThemeProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2SAmDeA,MAhDf,WACE,IAAMC,EAAQC,YAAY,CACxBC,WAAY,CACRC,YAAa,CACXC,WAAc,qBACdC,cAAe,OACfC,SAAU,OAKlB,OACEC,IAAAC,cAACC,IAAG,KACFF,IAAAC,cAACE,IAAM,CAACC,SAAS,SAASC,MAAO,CAAEC,WAAY,YAC7CN,IAAAC,cAACM,IAAO,KACNP,IAAAC,cAACO,IAAU,CAACC,KAAK,QAAQC,KAAK,QAAQC,MAAM,UAAUC,aAAW,QAC/DZ,IAAAC,cAAA,OAAKY,IAAI,mBAAmBC,MAAM,KAAKC,OAAO,QAEhDf,IAAAC,cAACe,IAAU,CAACC,QAAQ,KAAKC,UAAU,MAAMC,GAAI,CAAEC,SAAU,KAEzDpB,IAAAC,cAACoB,IAAK,CAACC,UAAU,MAAMC,QAAS,GAC9BvB,IAAAC,cAACuB,IAAM,CAACb,MAAM,WAAU,YACxBX,IAAAC,cAACuB,IAAM,CAACb,MAAM,WAAU,YACxBX,IAAAC,cAACuB,IAAM,CAACb,MAAM,WAAU,cAI5BX,IAAAC,cAACwB,IAAa,CAAChC,MAAOA,GACpBO,IAAAC,cAACe,IAAU,KAAC,mCCjBPU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCHDY,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAACT,EAAG,QAORkC","file":"static/js/main.da4eb561.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { AppBar, Toolbar, IconButton, Typography, Stack, Button, Box, createTheme, ThemeProvider } from '@mui/material';\nfunction App() {\n  const theme = createTheme({\n    typography: {\n        allVariants: {\n          'fontFamily': 'Noto Serif Display',\n          textTransform: 'none',\n          fontSize: 32  ,\n        }\n    },\n  })\n\n  return (\n    <Box>\n      <AppBar position='static' style={{ background: '#730c0c' }}>\n        <Toolbar>\n          <IconButton size='large' edge='start' color='inherit' aria-label='logo'>\n            <img src='cardeal_icon.ico' width='42' height='42'/>\n          </IconButton>\n          <Typography variant='h6' component='div' sx={{ flexGrow: 1 }}>\n          </Typography>\n          <Stack direction='row' spacing={2}>\n            <Button color='inherit'>Partners</Button>\n            <Button color='inherit'>Projects</Button>\n            <Button color='inherit'>Contact</Button>\n          </Stack>\n        </Toolbar>\n      </AppBar>\n        <ThemeProvider theme={theme}>\n          <Typography>\n            Bem vindo ao site da Cardeal\n          </Typography>\n        </ThemeProvider>\n        \n    </Box>\n\n  );\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={img} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Site em manutenção\n  //       </p>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}